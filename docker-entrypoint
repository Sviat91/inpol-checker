#!/bin/bash

# Docker entrypoint for inpol-checker with Xvfb, Fluxbox and VNC support
# Sets up GUI environment for Chrome automation

set -e

# Process cleanup handler
_kill_procs() {
  echo "Shutting down processes..."
  kill -TERM "$script" 2>/dev/null || true
  wait "$script" 2>/dev/null || true
  kill -TERM "$x11vnc" 2>/dev/null || true
  wait "$x11vnc" 2>/dev/null || true
  kill -TERM "$fluxbox" 2>/dev/null || true
  wait "$fluxbox" 2>/dev/null || true
  kill -TERM "$xvfb" 2>/dev/null || true
  wait "$xvfb" 2>/dev/null || true
}

trap _kill_procs SIGTERM SIGINT

# Clean up stale X lock file
rm -f /tmp/.X99-lock

# Start Xvfb (X Virtual Frame Buffer)
echo "Starting Xvfb..."
XVFB_WHD=${XVFB_WHD:-1920x1080x24}
Xvfb :99 -ac -screen 0 "$XVFB_WHD" -nolisten tcp +extension DAMAGE &
xvfb=$!

# Set display environment variable
export DISPLAY=:99

# Wait for Xvfb to be ready
echo "Waiting for Xvfb to initialize..."
sleep 2

# Start Fluxbox window manager (REQUIRED for Chrome GUI)
echo "Starting Fluxbox window manager..."
fluxbox &
fluxbox=$!

# Wait for Fluxbox to be ready
echo "Waiting for Fluxbox to initialize..."
sleep 2

# Start x11vnc for VNC access (port 5900)
echo "Starting x11vnc on port 5900..."
x11vnc \
  -rfbport 5900 \
  -rfbauth /root/.vnc/passwd \
  -display :99 \
  -forever \
  -shared \
  -nopw \
  -bg \
  -o /root/.vnc/log.log
x11vnc=$!

# Set environment variables for Chrome
export CHROMEDRIVER_PATH=${CHROMEDRIVER_PATH:-/usr/bin/chromedriver}
export CHROME_BINARY=${CHROME_BINARY:-/usr/bin/chromium}
export HEADLESS=${HEADLESS:-false}

echo "Environment configured:"
echo "  DISPLAY=$DISPLAY"
echo "  CHROMEDRIVER_PATH=$CHROMEDRIVER_PATH"
echo "  CHROME_BINARY=$CHROME_BINARY"
echo "  HEADLESS=$HEADLESS"
echo "  Window Manager: Fluxbox"

# Change to working directory
cd /opt/src || exit 1

# Execute the main command
echo "Starting application: $*"
exec "$@" &
script=$!

# Wait for main process
wait $script
